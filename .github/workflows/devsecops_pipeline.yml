name: NC ACADEMY DevSecOps PIPELINE

on:
  push:
    branches:
      - development
      - production
  repository_dispatch:
    types: [deploy-production]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/production' && 'production' || 'development' }}
    steps:
    - uses: actions/checkout@v2
    - name: Build Docker Image
      run: docker build -t ncacademy_website ./ncacademy_website

  test:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/production' && 'production' || 'development' }}
    steps:
    - name: Run Tests
      run: echo "Running tests"

  promote_to_production:
    if: github.ref == 'refs/heads/development' && success()
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: 'main'
        fetch-depth: 0 
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  deploy:
    if: github.ref == 'refs/heads/production' || github.event_name == 'repository_dispatch' && github.event.action == 'deploy-production'
    needs: [test, promote_to_production]
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    - name: Initialize Terraform
      run: terraform init
      working-directory: ./ncacademy_website
    - name: Apply Terraform
      run: terraform apply -auto-approve
      working-directory: ./ncacademy_website
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_AWS_REGION: ${{ secrets.AWS_REGION }}
        TF_VAR_CLOUDFLARE_API_KEY: ${{ secrets.TF_VAR_CLOUDFLARE_API_KEY }}
        TF_VAR_SITE_DOMAIN: ${{ secrets.TF_VAR_SITE_DOMAIN }}
